name: Lançar nova release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Deploy on self-hosted runner
    runs-on: self-hosted

    env:
      APP_DIR: ${{ vars.APP_DIR }}
      IMAGE: ${{ vars.APP_IMAGE }}
      SERVICE: web

    steps:
      - name: Login on GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update repository
        working-directory: ${{ env.APP_DIR }}
        run: |
          git config --global --add safe.directory "${{ env.APP_DIR }}"
          git pull --ff-only origin main

      - name: Update image and restart container
        working-directory: ${{ env.APP_DIR }}
        run: |
          docker compose pull "$SERVICE"
          docker compose up -d --no-deps "$SERVICE"

      - name: Wait for container health
        working-directory: ${{ env.APP_DIR }}
        run: |
          set -e
          CID=$(docker compose -f docker-compose.yml ps -q "$SERVICE")
          if [ -z "$CID" ]; then
            echo "❌ Could not find container for service: $SERVICE"
            docker compose -f docker-compose.yml ps
            exit 1
          fi

          echo "⏳ Waiting for $SERVICE to become healthy..."
          for i in {1..60}; do
            STATUS=$(docker inspect --format='{{.State.Health.Status}}' "$CID" 2>/dev/null || echo "none")
            echo "Status: $STATUS"
            if [ "$STATUS" = "healthy" ]; then
              echo "✅ $SERVICE is healthy."
              exit 0
            fi
            sleep 2
          done

          echo "❌ $SERVICE did not become healthy after 120s."
          docker logs "$CID" || true
          exit 1

      - name: Clean up old images
        run: docker image prune -f
